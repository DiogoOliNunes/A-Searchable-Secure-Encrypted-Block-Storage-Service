s to the group _g_n_a_m_e.  If _g_n_a_m_e is numeric
             and there is no such group name, then _g_n_a_m_e is treated as a group
             ID.

     --iiggnnoorree__rreeaaddddiirr__rraaccee
             This option is for GNU find compatibility and is ignored.

     --iillnnaammee _p_a_t_t_e_r_n
             Like --llnnaammee, but the match is case insensitive.  This is a GNU
             find extension.

     --iinnaammee _p_a_t_t_e_r_n
             Like --nnaammee, but the match is case insensitive.

     --iinnuumm _n
             True if the file has inode number _n.

     --iippaatthh _p_a_t_t_e_r_n
             Like --ppaatthh, but the match is case insensitive.

     --iirreeggeexx _p_a_t_t_e_r_n
             Like --rreeggeexx, but the match is case insensitive.

     --iiwwhhoolleennaammee _p_a_t_t_e_r_n
             The same thing as --iippaatthh, for GNU find compatibility.

     --lliinnkkss _n
             True if the file has _n links.

     --llnnaammee _p_a_t_t_e_r_n
             Like --nnaammee, but the contents of the symbolic link are matched
             instead of the file name.  Note that this only matches broken
             symbolic links if symbolic links are being followed.  This is a
             GNU find extension.

     --llss     This primary always evaluates to true.  The following information
             for the current file is written to standard output: its inode
             number, size in 512-byte blocks, file permissions, number of hard
             links, owner, group, size in bytes, last modification time, and
             pathname.  If the file is a block or character special file, the
             device number will be displayed instead of the size in bytes.  If
             the file is a symbolic link, the pathname of the linked-to file
             will be displayed preceded by ``->''.  The format is identical to
             that produced by ``llss --ddggiillss''.

     --mmaaxxddeepptthh _n
             Always true; descend at most _n directory levels below the command
             line arguments.  If any --mmaaxxddeepptthh primary is specified, it
             applies to the entire expression even if it would not normally be
             evaluated.  ``--mmaaxxddeepptthh 0'' limits the whole search to the com-
             mand line arguments.

     --mmiinnddeepptthh _n
             Always true; do not apply any tests or actions at levels less
             than _n.  If any --mmiinnddeepptthh primary is specified, it applies to the
             entire expression even if it would not normally be evaluated.
             ``--mmiinnddeepptthh 1'' processes all but the command line arguments.

     --mmmmiinn _n
             True if the difference between the file last modification time
             and the time ffiinndd was started, rounded up to the next full
             minute, is _n minutes.

     --mmnneewweerr _f_i_l_e
             Same as --nneewweerr.

     --mmoouunntt  The same thing as --xxddeevv, for GNU find compatibility.

     --mmttiimmee _n[ssmmhhddww]
             If no units are specified, this primary evaluates to true if the
             difference between the file last modification time and the time
             ffiinndd was started, rounded up to the next full 24-hour period, is
             _n 24-hour periods.

             If units are specified, this primary evaluates to true if the
             difference between the file last modification time and the time
             ffiinndd was started is exactly _n units.  Please refer to the --aattiimmee
             primary description for information on supported time units.

     --nnaammee _p_a_t_t_e_r_n
             True if the last component of the pathname being examined matches
             _p_a_t_t_e_r_n.  Special shell pattern matching characters (``['',
             ``]'', ``*'', and ``?'') may be used as part of _p_a_t_t_e_r_n.  These
             characters may be matched explicitly by escaping them with a
             backslash (``\'').

     --nneewweerr _f_i_l_e
             True if the