 the shell:

     find / \! -name "*.c" -print
             Print out a list of all the files whose names do not end in _._c.

     find / -newer ttt -user wnj -print
             Print out a list of all the files owned by user ``wnj'' that are
             newer than the file _t_t_t.

     find / \! \( -newer ttt -user wnj \) -print
             Print out a list of all the files which are not both newer than
             _t_t_t and owned by ``wnj''.

     find / \( -newer ttt -or -user wnj \) -print
             Print out a list of all the files that are either owned by
             ``wnj'' or that are newer than _t_t_t.

     find / -newerct '1 minute ago' -print
             Print out a list of all the files whose inode change time is more
             recent than the current time minus one minute.

     find / -type f -exec echo {} \;
             Use the echo(1) command to print out a list of all the files.

     find -L /usr/ports/packages -type l -exec rm -- {} +
             Delete all broken symbolic links in _/_u_s_r_/_p_o_r_t_s_/_p_a_c_k_a_g_e_s.

     find /usr/src -name CVS -prune -o -depth +6 -print
             Find files and directories that are at least seven levels deep in
             the working directory _/_u_s_r_/_s_r_c.

     find /usr/src -name CVS -prune -o -mindepth 7 -print
             Is not equivalent to the previous example, since --pprruunnee is not
             evaluated below level seven.

CCOOMMPPAATTIIBBIILLIITTYY
     The --ffoollllooww primary is deprecated; the --LL option should be used instead.
     See the _S_T_A_N_D_A_R_D_S section below for details.

SSEEEE AALLSSOO
     chflags(1), chmod(1), cvs(1), locate(1), lsvfs(1), whereis(1), which(1),
     xargs(1), stat(2), acl(3), fts(3), getgrent(3), getpwent(3), strmode(3),
     re_format(7), symlink(7)

SSTTAANNDDAARRDDSS
     The ffiinndd utility syntax is a superset of the syntax specified by the IEEE
     Std 1003.1-2001 (``POSIX.1'') standard.

     All the single character options except --HH and --LL as well as --aammiinn,
     --aanneewweerr, --ccmmiinn, --ccnneewweerr, --ddeelleettee, --eemmppttyy, --ffssttyyppee, --iinnaammee, --iinnuumm,
     --iirreeggeexx, --llss, --mmaaxxddeepptthh, --mmiinnddeepptthh, --mmmmiinn, --ppaatthh, --pprriinntt00, --rreeggeexx and all
     of the --BB** birthtime related primaries are extensions to IEEE Std
     1003.1-2001 (``POSIX.1'').

     Historically, the --dd, --LL and --xx options were implemented using the pri-
     maries --ddeepptthh, --ffoollllooww, and --xxddeevv.  These primaries always evaluated to
     true.  As they were really global variables that took effect before the
     traversal began, some legal expressions could have unexpected results.
     An example is the expression --pprriinntt --oo --ddeepptthh.  As --pprriinntt always evalu-
     ates to true, the standard order of evaluation implies that --ddeepptthh would
     never be evaluated.  This is not the case.

     The operator --oorr was implemented as --oo, and the operator --aanndd was imple-
     mented as --aa.

     Historic implementations of the --eexxeecc and --ookk primaries did not replace
     the string ``{}'' in the utility name or the utility arguments if it had
     preceding or following non-whitespace characters.  This version replaces
     it no matter where in the utility name or arguments it appears.

     The --EE option was inspired by the equivalent grep(1) and sed(1) options.

HHIISSTTOORRYY
     A ffiinndd command appeared in Version 1 AT&T UNIX.

BBUUGGSS
     The special characters used by ffiinndd are also special characters to many
     shell programs.  In particular, the characters ``*'', ``['', ``]'',
     ``?'', ``('', ``)'', ``!'', ``\'' and ``;'' may have to be escaped from
     the shell.

     As there is no delimiter separating options and file names or file names
     and the _e_x_p_r_e_s_s_i_o_n, it is difficult to specify files named _-_x_d_e_v or _!.
     These problems are handled by the --ff option and the getopt(3) ``----'' con-
     struct.

     The --ddeelleettee p